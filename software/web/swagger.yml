swagger: "2.0"
info:
  description: This is the swagger file that goes with our server code
  version: "1.0.0"
  title: Swagger REST Article
consumes:
  - "application/json"
produces:
  - "application/json"

basePath: "/api"

# Paths supported by the server application
paths:
  /prepare:
    post:
      operationId: "cocktailMashine.prepare"
      tags:
        - Cocktail-Mashine
      description: "Prepare a recipe"
      parameters:
        - in: body
          name: Recipe
          description: The Recipe to recipe.
          schema:
            properties:
                id:
                  type: "integer"
      responses:
        200:
          description: "Successful preparing Recipe operation"
          schema:
            properties:
              id:
                type: "integer"
  
  /recipe:
    get:
      operationId: "recipe.read_all"
      tags:
        - Recipe
      description: "Read all recipe"
      responses:
        200:
          description: "Successful read recipe list operation"
          schema:
            type: "array"
            items:
              properties:
                id:
                  type: "integer"
                name:
                  type: "string"
    put:
      operationId: "recipe.insert"
      tags:
        - Recipe
      description: "insert a recipe"
      parameters:
        - in: body
          name: Recipe
          description: The Recipe to insert.
          schema:
            properties:
                id:
                  type: "integer"
                name:
                  type: "string"
      responses:
        200:
          description: "Successful insert Recipe operation"
          schema:
            properties:
              id:
                type: "integer"
              name:
                type: "string"
  /recipeItem:
    get:
      operationId: recipeItem.read_all
      tags:
        - RecipeItem
      description: "Read all RecipeItem"
      parameters:
        - name: recipeId
          in: query
          description: id of the recipe
          type: integer
          required: False
      responses:
        200:
          description: "Successful read RecipeItem list operation"
          schema:
            type: "array"
            items:
              properties:
                ingredient:
                  type: "integer"
                recipe:
                  type: "integer"
                ml:
                  type: number
    put:
      operationId: "recipeItem.insert"
      tags:
        - Recipe
      description: "insert a recipeItem"
      parameters:
        - in: body
          name: Recipe
          description: The recipe item to insert.
          schema:
            properties:
                ingredient:
                  type: "integer"
                recipe:
                  type: "integer"
                ml:
                  type: number
      responses:
        200:
          description: "Successful insert recipe item operation"
          schema:
            properties:
                ingredient:
                  type: "integer"
                recipe:
                  type: "integer"
                ml:
                  type: number
  /ingredient:
    get:
      operationId: "ingredient.read_all"
      tags:
        - Ingredient
      description: "Read all ingredient"
      responses:
        200:
          description: "Successful read ingredient list operation"
          schema:
            type: "array"
            items:
              properties:
                id:
                  type: "integer"
                name:
                  type: "string"
    put:
      operationId: "ingredient.insert"
      tags:
        - Ingredient
      description: "insert a ingredient"
      parameters:
        - in: body
          name: ingredient
          description: The ingredient to insert.
          schema:
            properties:
              name:
                type: "string"
      responses:
        200:
          description: "Successful insert ingredient operation"
          schema:
            properties:
              id:
                type: "integer"
              name:
                type: "string"
  /ingredient/{ingredientId}:
    get:
      operationId: ingredient.read_one
      tags:
        - Ingredient
      summary: Read ingredient
      description: Read one ingredient by Id
      parameters:
        - name: ingredientId
          in: path
          description: id of the ingredient
          type: integer
          required: True
      responses:
        200:
          description: Successfully read ingredient from db operation
          schema:
            properties:
                id:
                  type: "integer"
                name:
                  type: "string"
  /pump:
    get:
      operationId: "pump.read_all"
      tags:
        - Pump
      description: "Read all pump"
      responses:
        200:
          description: "Successful read pump list operation"
          schema:
            type: "array"
            items:
              properties:
                id:
                  type: "integer"
  /pump_mapping:
    get:
      operationId: "cocktailMashine.pump_mappings"
      tags:
        - Pump mapping
      description: "Read all pump mappings"
      responses:
        200:
          description: "Successful read pump mappings list operation"
          schema:
            type: "array"
            items:
              properties:
                pumpId:
                  type: "integer"
                ingredientId:
                  type: "integer"
    put:
      operationId: "cocktailMashine.map_pump"
      tags:
        - Pump mapping
      description: "insert a pump mapping"
      parameters:
        - in: body
          name: mapping
          description: The mapping.
          schema:
            type: object
            properties:
              ingredientId:
                type: "integer"
              pumpId:
                type: "integer"
      responses:
        200:
          description: "Successful set pump mapping operation"
          schema:
            type: object
            properties:
                pumpId:
                  type: "integer"
                ingredientId:
                  type: "integer"